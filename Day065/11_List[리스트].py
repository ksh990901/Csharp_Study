#####################################################
# # 리스트
# # 여러 개의 값을 일관적으로 관리
# # 타 프로그래밍의 배열과 동일한 구조
# # 등록된 값의 개별 항목을 요소, 원소라고 한다.
#####################################################
# # 타입을 같이 뭉쳐서 나열하는것이 좋은 코딩이긴 하지만
# # 다른 타입의 값도 수용한다.
#lists = [1,2,'삼',True]

# # 반복문을 사용한 리스트 요소 추출
# lists = [10,20,30]
# for num in lists :
#     print(num,end = "점")


# # 리스트 외 범위 지정
# lists = [10,20,30,40,50,60,70,80]
# print(lists[0:2]) # 10, 20이 출력
# print(lists[2:6:2]) # 30, 50이 출력


# # 리스트의 범위에 값을 할당.
# lists = [10,20,30,40,50,60,70,80]
# lists[2:5] = [4,5]
# print(lists)

# # 범위가 벗어나더라도 값을 할당
# lists = [10,20,30,40,50,60,70,80]

# # 범위는 2개를 선택 하였으나 데이터요소를 7개 등록하는 경우
# lists[2:5] = [4,5,6,7,8,9,10]  
# print(lists)

# # 범위 삭제
# lists = [10,20,30,40,50,60,70,80]
# lists[2:9] = []
# print(lists)

# ############ 리스트 연산 ######################
# lists1 = ['일', '이', '삼']
# lists2 = [10,20,30,40,50,60,70,80]

# lists3 = lists1 + lists2
# print(lists3) # 두개의 리스트의 요소를 하나의 리스트에 할당.

# lists3 = lists1 * 3
# print(lists3) # 곱한 횟수 만큼 리스트의 내용을 반복하여 새로운 리스트 요소로 할당


###################################
# # 실습 : 리스트를 이용한 총점과 평균 구하기
###################################

lists = [10,20,30,40,50,60,70,80]
sum = 0 # 총점을 구할 외부 변수
for s in lists :
    sum += s
print("총점 :",  sum, "평균 : ", (sum/len(lists)))
