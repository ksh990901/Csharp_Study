Index

@model ValidationAttribute01.Models.Student
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<div>
    <div class= "row">
        <div class= "col-sm-4">
            <form method = "post" asp-controller= "Home" 
             asp-action= "Index" >
             <input asp-for = "Name" class = "form-control" placeholder="이름을 넣어주세요."/>
             <span asp-validation-for="Name"> </span>

             <input type = "submit" value= "Submit" class="btn btn-outline-success"/>
            </form>
        </div>
    </div>
</div>

HomeControllers

using Microsoft.AspNetCore.Mvc;
using System.Diagnostics;
using ValidationAttribute01.Models;

namespace ValidationAttribute01.Controllers
{
    public class HomeController : Controller
    {
        private readonly ILogger<HomeController> _logger;

        public HomeController(ILogger<HomeController> logger)
        {
            _logger = logger;
        }

        public IActionResult Index()
        {
            return View();
        }

        [HttpPost]
        public IActionResult Index(Student std)
        {
            return View();
        }

        public IActionResult Privacy()
        {
            return View();
        }

        [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]
        public IActionResult Error()
        {
            return View(new ErrorViewModel { RequestId = Activity.Current?.Id ?? HttpContext.TraceIdentifier });
        }
    }
}

Student

using System.ComponentModel.DataAnnotations;

namespace ValidationAttribute01.Models
{
    public class Student
    {
        //[Required]
        //[Required(ErrorMessage = "이름을 작성해주시요.")]
        [StringLength(15, MinimumLength =2,
            ErrorMessage = "이름은 두자 이상 작성이 가능합니다.")]
        public string Name { get; set; }    
    }
}

Index

@model ValidationAttribute01.Models.Student
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<div>
    <div class= "row">
        <div class= "col-sm-4">
            <form method = "post" asp-controller= "Home" 
             asp-action= "Index" >
             <input asp-for = "Name" class = "form-control" placeholder="이름을 넣어주세요."/>
             <span asp-validation-for="Name"> </span>

             <input type = "submit" value= "Submit" class="btn btn-outline-success"/>
            </form>
        </div>
    </div>
</div>

Program

var builder = WebApplication.CreateBuilder(args);

// Add services to the container.
builder.Services.AddControllersWithViews();

var app = builder.Build();

// Configure the HTTP request pipeline.
if (!app.Environment.IsDevelopment())
{
    app.UseExceptionHandler("/Home/Error");
    // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.
    app.UseHsts();
}

app.UseHttpsRedirection();
app.UseStaticFiles();

app.UseRouting();

app.UseAuthorization();

app.MapControllerRoute(
    name: "default",
    pattern: "{controller=Home}/{action=Index}/{id?}");

app.Run();
