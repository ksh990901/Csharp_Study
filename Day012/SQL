select * from emp;
#ename 과 job, sal 를 출력하되 sal 기준으로 오름차순 정렬
select ename, job, sal from emp 
order by sal desc;

#부서(Dept)테이블을 조회해주세요.
select * from dept;
select * from departments;

#mgt 값 중 고유한 값만 출력하려면
select mgr from emp;
select distinct mgr from emp;

#월급(sal) 12를 곱하여 '연봉' 컬럼을 만들어주세요.
#emp : ename sal sal * 12 as 연봉
#null 을 제거하는 일반 함수 nvl('', 0)
select ename as 이름, sal 월급, sal * 12 from emp;
select ename, sal, sal *12 + nvl(comm , 0) as 연봉, nvl(comm,0) from emp;


#부서 번호가 30번인 부서원의 모든 정보
select * from emp
where deptno = 30;

#사원 번호가 7782인 사원의 정보를 출력해 주세요.
select * from emp
where empno = 7782;

#부서 번호가 30번 이면서 직업이 'SALESMAN'인 직원들은? 문자열의 내용은 대소문자를 구분한다.
select * from emp
where deptno = 30 and job = 'SALESMAN';

#사원 번호가 7499이고 부서번호가 30번인 사원 정보는?
select * from emp
where empno = 7499 and deptno = 30;

#부서 번호 30, 또는 직업이 'CLERK'인 사원정보는?
select * from emp
where deptno = 30 or job = 'CLERK' ;

#급여가 2000 이상인 사원정보는?
select * from emp
where sal >= 2000;

#급여가 2500 이상이고 직업이 'ANALYST'인 사원정보는?
select * from emp
where sal >= 2500 and job = 'ANALYST';

#문자 대소 비교
select * from emp
where ename >= 'F';

#급여가 3000이 아닌 어떻게 표현
select * from emp
where sal != 3000;

select * from emp
where sal <> 3000;

select * from emp
where sal ^= 3000;

select * from emp
where not sal = 3000;

#in 연산자 포함
#직업이 'MANAGER' 또는 'SALESMAN' 또는 'CLERK'
select * from emp
where job not in ('MANAGER' , 'SALESMAN' , 'CLERK'); 

# 전체 부정 not in() 
# 등가 비교 or을 이용해서 동일하게 만들려면
select * from emp
where job != 'MANAGER' and job != 'SALESMAN' and job !='CLERK';

#BETWEEN A AND B
#급여가 2000이상 3000이하 
select * from emp
where sal between 2000 and 3000;

select * from emp 
where sal >= 2000 and sal <= 3000;

#문자열 포함 
select * from emp
where ename like 'S%';

#사원 이름의 두번 째 글자가 L인 사원만 출력하세요.
select * from emp
where ename like '_L%';

#사원 이름에 AM문자가 포함되어있는 사원 정보 출력
select * from emp
where ename like '%AM%';
