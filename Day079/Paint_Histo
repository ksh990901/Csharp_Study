namespace PaintHisto6._3._3
{
    internal class Program
    {
        static void calc_Histo(Mat image, out Mat hist, int bins, int rangeMax = 256)
        {
            hist = new Mat(bins, 1, MatType.CV_32F, new Scalar(0));
            float gap = rangeMax / (float)bins;

            for (int i = 0; i < image.Rows; i++)
            {
                for (int j = 0; j < image.Cols; j++)
                {
                    int idx = (int)(image.At<byte>(i, j) / gap);
                    hist.Set<float>(idx, hist.At<float>(idx) + 1);
                }
            }
        }

        static void draw_Histo(Mat hist, out Mat hist_img)
        {
           
            Size size = new Size(256, 200);

            hist_img = new Mat(size, MatType.CV_8U, Scalar.All(255));
            float bin = (float)hist_img.Cols / hist.Rows;
            Cv2.Normalize(hist, hist, 0, hist_img.Rows, NormTypes.MinMax);

            for (int i = 0; i < hist.Rows; i++)
            {
                float start_x = i * bin;
                float end_x = (i + 1) * bin;
                Point pt1 = new Point(start_x, 0);
                Point pt2 = new Point(end_x, hist.At<float>(i));

                if (pt2.Y > 0) Cv2.Rectangle(hist_img, pt1, pt2, Scalar.All(0), -1);


            }
                Cv2.Flip(hist_img, hist_img, 0);
        }

        static void Main(string[] args)
        {
            Mat image = Cv2.ImRead("C:\\Temp\\image\\pixel_test.jpg", ImreadModes.Grayscale);
            Mat hist, hist_img;
            if (image.Empty())
            {
                Console.WriteLine("이미지를 로드 불가합니다.");
                return;   
            }

            calc_Histo(image, out hist, 256);
            draw_Histo(hist, out hist_img);

            Cv2.ImShow("image", image);
            Cv2.ImShow("histo", hist_img);
            Cv2.WaitKey();
            Cv2.DestroyAllWindows();
        }
    }
}
